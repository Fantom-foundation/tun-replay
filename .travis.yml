language: cpp

git:
  depth: false

os: linux
dist: bionic

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test

before_script:
  - curl -L https://github.com/satori-com/tcpkali/releases/download/v1.1.1/tcpkali-1.1.1.tar.gz -o "$HOME"/tcpkali.tar.gz
  - mkdir "$HOME"/tcpkali
  - tar xzf "$HOME"/tcpkali.tar.gz -C "$HOME/tcpkali" --strip-components=1
  - cd "$HOME"/tcpkali; ./configure; make

  - mkdir "$TRAVIS_BUILD_DIR/build" && cd "$TRAVIS_BUILD_DIR/build"

script:
  - cd "$TRAVIS_BUILD_DIR/build"
  - chmod ug+x ../test/kali_normal.sh
  - chmod ug+x ../test/kali_sandbox.sh

  # build test server
  - cmake -DCMAKE_BUILD_TYPE=Release ..
  - cmake --build . --target server
  - cp test/server "$HOME"

  # baseline
  - rm -r *
  - cp "$HOME"/tcpkali/src/tcpkali .
  - cp "$HOME"/server .
  - sudo ../test/kali_normal.sh 10
  - cat kalilogs*

  # debug, thread sanitizer
  - rm -r *
  - cmake -DCMAKE_BUILD_TYPE=Debug -DUSE_TS=ON ..
  - cmake --build . --target plg

  - cp "$HOME"/tcpkali/src/tcpkali .
  - cp "$HOME"/server .
  - sudo ../test/kali_sandbox.sh 10 --record
  - sudo ../test/kali_sandbox.sh 10 --replay

  # debug, address sanitizer
  - rm -r *
  - cmake -DCMAKE_BUILD_TYPE=Debug -DUSE_AS=ON ..
  - cmake --build . --target plg
  
  - cp "$HOME"/tcpkali/src/tcpkali .
  - cp "$HOME"/server .
  - sudo ../test/kali_sandbox.sh 10 --record
  - sudo ../test/kali_sandbox.sh 10 --replay

  # release, test preformance
  - rm -r *
  - cmake -DCMAKE_BUILD_TYPE=Release ..
  - cmake --build . --target plg

  - cp "$HOME"/tcpkali/src/tcpkali .
  - cp "$HOME"/server .
  - sudo ../test/kali_sandbox.sh 10 --record
  - cat kalilogs*
  - sudo ../test/kali_sandbox.sh 10 --replay
  - cat kalilogs*
